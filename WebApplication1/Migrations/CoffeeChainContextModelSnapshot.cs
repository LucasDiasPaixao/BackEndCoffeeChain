// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(CoffeeChainContext))]
    partial class CoffeeChainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Armazem", b =>
                {
                    b.Property<int>("ArmazemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArmazemId"));

                    b.Property<string>("CidadeArmazem")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmailArmazem")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("EnderecoArmazem")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TelefoneArmazem")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UfArmazem")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.HasKey("ArmazemId")
                        .HasName("PK_Armazens_1");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Armazens");
                });

            modelBuilder.Entity("WebApplication1.Models.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpresaId"));

                    b.Property<string>("CepEmpresa")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CidadeEmpresa")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CnpjEmpresa")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CNPJEmpresa");

                    b.Property<string>("EmailEmpresa")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EnderecoEmpresa")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PaisEmpresa")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TelefoneEmpresa")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UfEmpresa")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.HasKey("EmpresaId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("WebApplication1.Models.Entrada", b =>
                {
                    b.Property<int>("EntradaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntradaId"));

                    b.Property<int>("ArmazemId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoLote")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("CustoEntrada")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmbalagemArmazenado")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("LocalArmazenado")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NfeEntrada")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("PrecoLote")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("ProdutorId")
                        .HasColumnType("int");

                    b.Property<int>("PropriedadeId")
                        .HasColumnType("int");

                    b.Property<decimal>("QtdSacas")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Safra")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TipoCafe")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("TipoEntrada")
                        .HasColumnType("int");

                    b.HasKey("EntradaId");

                    b.HasIndex("ArmazemId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ProdutorId");

                    b.HasIndex("PropriedadeId");

                    b.ToTable("Entradas");
                });

            modelBuilder.Entity("WebApplication1.Models.Produtores", b =>
                {
                    b.Property<int>("ProdutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdutorId"));

                    b.Property<string>("CepProdutor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CidadeProdutor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CpfProdutor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmailProdutor")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EnderecoProdutor")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeProdutor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RgProdutor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TelefoneProdutor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UfProdutor")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.HasKey("ProdutorId");

                    b.ToTable("Produtores");
                });

            modelBuilder.Entity("WebApplication1.Models.Propriedade", b =>
                {
                    b.Property<int>("PropriedadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropriedadeId"));

                    b.Property<string>("CepPropriedade")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CidadePropriedade")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CnpjFazenda")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CNPJFazenda");

                    b.Property<string>("EmailPropriedade")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EnderecoPropriedade")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("InscEstadual")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NomeFazenda")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ProdutorId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonePropriedade")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UfPropriedade")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.HasKey("PropriedadeId");

                    b.HasIndex("ProdutorId");

                    b.ToTable("Propriedades");
                });

            modelBuilder.Entity("WebApplication1.Models.Saida", b =>
                {
                    b.Property<int>("SaidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaidaId"));

                    b.Property<decimal?>("CustoSaida")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinoEmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("DestinoProdutorId")
                        .HasColumnType("int");

                    b.Property<int>("DestinoPropriedadeId")
                        .HasColumnType("int");

                    b.Property<string>("EmbalagemSaida")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("EntradaId")
                        .HasColumnType("int");

                    b.Property<string>("NfeSaida")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("PrecoSaida")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("QtdSacas")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("TipoSaida")
                        .HasColumnType("int");

                    b.HasKey("SaidaId");

                    b.HasIndex("DestinoEmpresaId");

                    b.HasIndex("DestinoProdutorId");

                    b.HasIndex("DestinoPropriedadeId");

                    b.HasIndex("EntradaId");

                    b.ToTable("Saidas");
                });

            modelBuilder.Entity("WebApplication1.Models.Armazem", b =>
                {
                    b.HasOne("WebApplication1.Models.Empresa", "Empresa")
                        .WithMany("Armazem")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("WebApplication1.Models.Entrada", b =>
                {
                    b.HasOne("WebApplication1.Models.Armazem", "Armazem")
                        .WithMany("Entrada")
                        .HasForeignKey("ArmazemId")
                        .IsRequired()
                        .HasConstraintName("FK_Entradas_Armazens");

                    b.HasOne("WebApplication1.Models.Empresa", "Empresa")
                        .WithMany("Entrada")
                        .HasForeignKey("EmpresaId")
                        .IsRequired()
                        .HasConstraintName("FK_Entradas_Empresas");

                    b.HasOne("WebApplication1.Models.Produtores", "Produtor")
                        .WithMany("Entrada")
                        .HasForeignKey("ProdutorId")
                        .IsRequired()
                        .HasConstraintName("FK_Entradas_Produtores");

                    b.HasOne("WebApplication1.Models.Propriedade", "Propriedade")
                        .WithMany("Entrada")
                        .HasForeignKey("PropriedadeId")
                        .IsRequired()
                        .HasConstraintName("FK_Entradas_Propriedades");

                    b.Navigation("Armazem");

                    b.Navigation("Empresa");

                    b.Navigation("Produtor");

                    b.Navigation("Propriedade");
                });

            modelBuilder.Entity("WebApplication1.Models.Propriedade", b =>
                {
                    b.HasOne("WebApplication1.Models.Produtores", "Produtor")
                        .WithMany("Propriedades")
                        .HasForeignKey("ProdutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Propriedades_Produtores");

                    b.Navigation("Produtor");
                });

            modelBuilder.Entity("WebApplication1.Models.Saida", b =>
                {
                    b.HasOne("WebApplication1.Models.Empresa", "DestinoEmpresa")
                        .WithMany("Saida")
                        .HasForeignKey("DestinoEmpresaId")
                        .IsRequired()
                        .HasConstraintName("FK_Saidas_Empresas");

                    b.HasOne("WebApplication1.Models.Produtores", "DestinoProdutor")
                        .WithMany("Saida")
                        .HasForeignKey("DestinoProdutorId")
                        .IsRequired()
                        .HasConstraintName("FK_Saidas_Produtores");

                    b.HasOne("WebApplication1.Models.Propriedade", "DestinoPropriedade")
                        .WithMany("Saida")
                        .HasForeignKey("DestinoPropriedadeId")
                        .IsRequired()
                        .HasConstraintName("FK_Saidas_Propriedades");

                    b.HasOne("WebApplication1.Models.Entrada", "Entrada")
                        .WithMany("Saida")
                        .HasForeignKey("EntradaId")
                        .IsRequired()
                        .HasConstraintName("FK_Saidas_Entradas");

                    b.Navigation("DestinoEmpresa");

                    b.Navigation("DestinoProdutor");

                    b.Navigation("DestinoPropriedade");

                    b.Navigation("Entrada");
                });

            modelBuilder.Entity("WebApplication1.Models.Armazem", b =>
                {
                    b.Navigation("Entrada");
                });

            modelBuilder.Entity("WebApplication1.Models.Empresa", b =>
                {
                    b.Navigation("Armazem");

                    b.Navigation("Entrada");

                    b.Navigation("Saida");
                });

            modelBuilder.Entity("WebApplication1.Models.Entrada", b =>
                {
                    b.Navigation("Saida");
                });

            modelBuilder.Entity("WebApplication1.Models.Produtores", b =>
                {
                    b.Navigation("Entrada");

                    b.Navigation("Propriedades");

                    b.Navigation("Saida");
                });

            modelBuilder.Entity("WebApplication1.Models.Propriedade", b =>
                {
                    b.Navigation("Entrada");

                    b.Navigation("Saida");
                });
#pragma warning restore 612, 618
        }
    }
}
